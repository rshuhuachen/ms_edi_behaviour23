---
title: "Factors that affect the gender disparity"
author: "Rebecca S. Chen"
---

```{r setup, echo=F, message=F}

# load packages
pacman::p_load(lme4, tidyverse, data.table, performance, DHARMa, jtools, readxl, kableExtra, lmtest)

### Load data ####

#behavioural
load("../data/question_asking/question_asking_data_condensed_for_analysis.RData")

#survey
load("../data/post_survey/clean_survey_all.RData")

### Set theme ####
source("../scripts/EDI_ggplot_theme.R")

### Load function to output model results
source("../scripts/function_collect_model_output.R")

# subset data

data_control <- subset(data_analysis, treatment == "Control" &
                     is.na(followup) & is.na(jumper)&
                     is.na(host_asks) & 
                    !grepl("speaker|questioner", allocator_question))

data_control <- droplevels(data_control)

data_hands <- subset(data_control, hands_prop_men <= 1)

```

**Why do women ask less questions than men do?**

The results from the previous sections show that women ask less questions than men do, and this is because they raise their hands less often. We next aimed to address why we observe this, and how we can encourage women to ask more questions. Could female representation encourage women to participate more, or does it depend more on the setting?

## Survey data

### Conditions

More specifically, we asked in the survey to indicate on a 7-point Likert scale to what extent people agree with five statements. The statements were phrased as follows: I feel more comfortable asking a question if: 1) the presenter is of my own gender, 2) there is representation of my gender in the audience, 3) the audience size is smaller, 4) I know the speaker, or 5) the host is of their my own gender.

### Motivations and hestitations

The post-congress survey additionally included questions on what aspect(s) motivate(s) people from asking questions at the Behaviour 2023 and in general (hereafter referred to as "motivations"), and what aspect(s) make(s) people more hesitant towards asking a question (hereafter referred to as "hesitations"). We can therefore get a deeper understanding into the internal factors associated with question asking behaviour that affect women more than men. The motivations to ask a question that were most commonly selected by respondents included "Interest in the topic" (87.6%), "Gaining deeper understanding" (72.5%), and "Relevance for my own research" (50%) (see Methods for all motivations included in the survey). The most commonly selected hesitations included "I would rather ask my question after the session, 1-1 with the speaker" (45.3%), "Afraid I misunderstood the content of the presentation" (40.4%) and "I did not think my question was relevant/important" (39.6%).

### Analysis of gender effects

We built five ordinal GLMs, with the Likert-scale response to each of the five conditions as the dependent variable (1: strongly disagree, 7: strongly agree) and self-reported gender identity as the independent variable, while correcting for variation in career stages. We also built 19 binomial GLMs, one per motivation/hesitation, with the binomial response whether the motivation or hesitation was ticked (1) or not (0) as the dependent variable, and self-reported gender as the independent variable, while controlling for career stage. Statistical significance was inferred through an LRT.

We first analyzed which conditions, motivations and hesitations are more often indicated to be of importance by women compared to men, and subsequently which factors best predict the probability that a person asked a question during the congress.

```{r survey, warning=F, message=F, echo=T}

# rearrange genders
survey$gender <- factor(survey$gender, levels = c("Male", "Female", "Non-binary"))

# first ask: gender bias in feeling uncomfortable in asking a question?
survey$comfort_asking_rating <- as.factor(survey$comfort_asking_rating)

comfort_gender <- MASS::polr(comfort_asking_rating ~ gender + career_3cat, data = subset(survey, !is.na(gender))) 

coeftest(comfort_gender)

comfort_gender_null <- MASS::polr(comfort_asking_rating ~ career_3cat, data = subset(survey, !is.na(gender))) 

m_comfortout <- collect_out(model = comfort_gender, null = comfort_gender_null, name = "comfort_ask_question_gender", n_factors = 4, type = "likert", save = "yes",  dir = "../results/survey") 

m_comfortout %>% t() %>% kbl() %>%
  kable_classic_2() 

# if you're less comfortable asking a question, is it less likely you ask one?
survey$comfort_asking_rating <- as.numeric(as.character(survey$comfort_asking_rating))

ask_comfort <- glm(ask_questions ~ comfort_asking_rating + gender + career_3cat,
                   family = binomial, data = subset(survey, !is.na(gender) & !is.na(career_3cat) & !is.na(comfort_asking_rating))) 

ask_comfort_null <- glm(ask_questions ~ gender + career_3cat, family = binomial,
                        data = subset(survey, !is.na(gender) & !is.na(career_3cat) & !is.na(comfort_asking_rating))) 

m_comfort_ask_out <- collect_out(model = ask_comfort, null = ask_comfort_null, name = "comfort_ask_question", n_factors = 5 , type="survey", save = "yes",  dir = "../results/survey") 

m_comfort_ask_out %>% t() %>% kbl() %>%
  kable_classic_2() 

# indeed due to gender bias in being comfortable asking questions

### isolate reasons
# take out reasons that were ticked less than 15 times
n_ticked <- data.frame()

for (i in 1:ncol(survey)){
  if (grepl("reason_question|reason_noquestion", colnames(survey)[i]) == TRUE) {
    sub <- survey[,i]
    sum <- as.data.frame(summary(as.factor(sub)))
    ticked <- sum["1","summary(as.factor(sub))"]
    row <- data.frame(i = i,
                      reason = colnames(survey)[i],
                      ticked = ticked)
    n_ticked <- rbind(n_ticked, row)
  }
}

ticked_enough <- subset(n_ticked, ticked >= 15)

# isolate questions about conditions, motivations and hesitations
conditions <- grep("more_comfort", colnames(survey))
reasons <- c(ticked_enough$i)
reasons_conditions <- c(conditions, reasons)

# take out 'other' reasons
other <- grep("_other", colnames(survey)[reasons_conditions]) 
reasons_conditions <- reasons_conditions[-other] #exclude 'other' categories

# take out not chosen
notchosen <- grep("reason_noquestion_notchosen", colnames(survey)[reasons_conditions]) 
reasons_conditions <- reasons_conditions[-notchosen] #exclude 

output_reasons <- data.frame()

for (i in reasons_conditions){
  ## split conditions between motivation/hestitations 
  if (grepl("more_comfort", colnames(survey)[i]) == TRUE) {
    # null model
    formula_null <- as.formula(paste0(colnames(survey)[i], "~ career_3cat"))
    null <- MASS::polr(formula_null, data = subset(survey, !is.na(gender))) #polr for ordinal GLMs
    
    # alternative model with gender
    formula_alt <- formula(paste0(colnames(survey)[i], "~ gender + career_3cat"))  
    model <- MASS::polr(formula_alt, data = subset(survey, !is.na(gender)))
    
    sum <- as.data.frame(coeftest(model)[,])
    confint <- as.data.frame(confint(model))
    
    # lrt
    lrt <- anova(null, model, test = "Chisq")
    lrt_pval <- lrt$`Pr(Chi)`[2]
    lrt_chisq <- lrt$`LR stat.`[2]
    
    out <- data.frame(response = colnames(survey)[i],
                      lrt_chisq = lrt_chisq,
                      lrt_pval = lrt_pval,
                      coef_female = sum["genderFemale","Estimate"],
                      pval_female = sum["genderFemale","Pr(>|t|)"],
                      lower_female = confint["genderFemale","2.5 %"],
                      upper_female = confint["genderFemale","97.5 %"],
                      se_female = sum["genderFemale", "Std. Error"],
                      zval_tval_female = sum["genderFemale", "t value"],
                      coef_non_binary = sum["genderNon-binary","Estimate"],
                      pval_non_binary = sum["genderNon-binary","Pr(>|t|)"],
                      lower_non_binary = confint["genderNon-binary","2.5 %"],
                      upper_non_binary = confint["genderNon-binary","97.5 %"],
                      se_non_binary = sum["genderNon-binary", "Std. Error"],
                      zval_tval_non_binary = sum["genderNon-binary", "t value"],
                      coef_mid = sum["career_3catMid","Estimate"],
                      pval_mid = sum["career_3catMid","Pr(>|t|)"],
                      se_mid = sum["career_3catMid", "Std. Error"],
                      zval_tval_mid = sum["career_3catMid", "t value"],
                      coef_late = sum["career_3catLate","Estimate"],
                      pval_late = sum["career_3catLate","Pr(>|t|)"],
                       se_late = sum["career_3catLate", "Std. Error"],
                      zval_tval_late = sum["career_3catLate", "t value"],
                      coef_other = sum["career_3catOther","Estimate"],
                      pval_other = sum["career_3catOther","Pr(>|t|)"],
                       se_other = sum["career_3catOther", "Std. Error"],
                     zval_tval_other = sum["career_3catOther", "t value"])
    
    
    output_reasons <- rbind(output_reasons, out)
    
    }
  if (grepl("reason", colnames(survey)[i]) == TRUE) {
    # null model
    formula_null <- as.formula(paste0(colnames(survey)[i], "~ career_3cat"))
    null <- glm(formula_null, data = subset(survey, !is.na(gender)), family = "binomial")
    # alternative model with gender
    formula_alt <- formula(paste0(colnames(survey)[i], "~ gender + career_3cat"))  
    model <- glm(formula_alt, data = survey, family = "binomial")
    sum <- summary(model)$coefficients
    confint <- (as.data.frame(summ(model, confint=TRUE)$coeftable))
    
    # lrt
    lrt <- anova(null, model, test = "Chisq")
    lrt_pval <- lrt$`Pr(>Chi)`[2]
    lrt_chisq <- lrt$`Deviance`[2]
    
    # collect all output
    out <- data.frame(response = colnames(survey)[i],
                      lrt_chisq = lrt_chisq,
                      lrt_pval = lrt_pval,
                      coef_female = sum["genderFemale","Estimate"],
                      pval_female = sum["genderFemale","Pr(>|z|)"],
                      lower_female = confint["genderFemale","2.5%"],
                      upper_female = confint["genderFemale","97.5%"],
                      se_female = sum["genderFemale", "Std. Error"],
                      zval_tval_female = sum["genderFemale", "z value"],
                      coef_non_binary = sum["genderNon-binary","Estimate"],
                      pval_non_binary = sum["genderNon-binary","Pr(>|z|)"],
                      lower_non_binary = confint["genderNon-binary","2.5%"],
                      upper_non_binary = confint["genderNon-binary","97.5%"],
                      se_non_binary = sum["genderNon-binary", "Std. Error"],
                      zval_tval_non_binary = sum["genderNon-binary", "z value"],
                      coef_mid = sum["career_3catMid career","Estimate"],
                      se_mid = sum["career_3catMid career","Std. Error"],
                      zval_tval_mid = sum["career_3catMid career","z value"],
                      pval_mid = sum["career_3catMid career","Pr(>|z|)"],
                      coef_late = sum["career_3catLate career","Estimate"],
                      se_late = sum["career_3catLate career","Std. Error"],
                      zval_tval_late = sum["career_3catLate career","z value"],
                      pval_late = sum["career_3catLate career","Pr(>|z|)"],
                      coef_other = sum["career_3catOther","Estimate"],
                      se_other = sum["career_3catOther","Std. Error"],
                      zval_tval_other = sum["career_3catOther","z value"],
                      pval_other = sum["career_3catOther","Pr(>|z|)"]
                      )
    
    output_reasons <- rbind(output_reasons, out)
    }}
  

# adjust p-values for multiple testing

output_reasons$lrt_qval <- p.adjust(output_reasons$lrt_pval, method = "fdr", n = nrow(output_reasons))

# round to 3 digits
output_reasons <- output_reasons %>% mutate_if(is.numeric, round, digits=3)

# save output in results
write.csv(output_reasons, file = "../results/question-asking/question_asking_why_survey_result.csv", quote=F, row.names = F)

output_reasons %>% arrange(lrt_qval) %>% kbl() %>%
  kable_classic_2()

```

Including gender as an explanatory variable included the fit of the model for most conditions. In order of highest to lowest effects, women are more comfortable asking questions they are more comfortable asking questions if: women are represented in the audience, the speaker is a woman, the host is a woman, and when the audience is smaller. Women are not more comfortable asking a question if they know the speaker. Despite the low sample size of non-binary respondents, also people with non-binary gender identities (N = 7) are more comfortable asking questions if their own genders identity is represented in the audience, if the speakers is of their own gender identity and if the host is of their own gender identity. Based on self-reports, female and non-binary representation in various contexts at the congress appears to make women and non-binary researchers more comfortable in asking questions, respectively.

Although no motivations were significantly affected by gender, there were two motivations that were (almost) significantly affected by gender after correcting for multiple testing: "Afraid I would not be able to phrase/articulate my question well", and "I did not have the confidence" (LRT FDR-corrected q-value \< 0.1). These two motivations were also affected by career stage, where early career researchers are more likely to tick the phrasing/articulation-related and confidence-related hesitation compared to late career researchers.

### Analysis of motivations and hesitations that predict question asking

Next, we fitted 19 more binomial GLMs to test which one of the motivations and hesitations was a statistically significant predictor for the probability of a person asking a question during the congress. The dependent variable in these models was therefore the response to the question "Did you ask one or more questions during Q&A sessions?" (1 for yes, 0 for no) and the response variable the binomial response whether the motivation or hesitation was ticked (1) or not (0), while again controlling for career stage.

```{r motivate hestitate important, echo=T, warning=F, message=F}
# loop over reasons again but without comfort

# take out 'other'
other <- grep("_other", colnames(survey)[reasons]) 
reasons <- reasons[-other]

# take out not chosen
notchosen <- grep("reason_noquestion_notchosen", colnames(survey)[reasons]) 
reasons <- reasons[-notchosen] #exclude 

output_asking <- data.frame()

for (i in reasons){
  subset <- survey %>% filter(!is.na(.[[i]]) & !is.na(colnames(survey)[i]) &
                     !is.na(gender) & !is.na(career_3cat) &
                     !is.na(ask_questions))


  # null model
  formula_null <- as.formula(paste0("ask_questions ~ gender +career_3cat"))
  null <- glm(formula_null, data = subset, family = "binomial")
  # alternative model with gender
  formula_alt <- as.formula(paste0("ask_questions ~ ", 
                                   colnames(survey)[i], "+ gender + career_3cat")) 
  model <- glm(formula_alt, data = subset, family = "binomial")
  
  # summary
  sum <- summary(model)$coefficients
  confint <- (as.data.frame(summ(model, confint=TRUE)$coeftable))
  
  # lrt
  lrt <- anova(null, model, test = "Chisq")
  lrt_sig <- lrt$`Pr(>Chi)`[2]
  lrt_chisq <- lrt$`Deviance`[2]
  
  out <- data.frame(predictor = colnames(survey)[i],
                    lrt_chisq = lrt_chisq,
                    lrt_sig = lrt_sig,
                    coef_reason = sum[2,"Estimate"],
                    se_reason = sum[2,"Std. Error"],
                    z_reason = sum[2, "z value"],
                    lower_reason = confint[2,"2.5%"],
                    upper_reason = confint[2,"97.5%"],
                    pval_reason = sum[2,"Pr(>|z|)"],
                    coef_female = sum["genderFemale","Estimate"],
                    pval_female = sum["genderFemale","Pr(>|z|)"],
                    coef_non_binary = sum["genderNon-binary","Estimate"],
                    pval_non_binary = sum["genderNon-binary","Pr(>|z|)"],
                    coef_mid = sum["career_3catMid career","Estimate"],
                    pval_mid = sum["career_3catMid career","Pr(>|z|)"],
                    coef_late = sum["career_3catLate career","Estimate"],
                    pval_late = sum["career_3catLate career","Pr(>|z|)"],
                    coef_other = sum["career_3catOther","Estimate"],
                    pval_other = sum["career_3catOther","Pr(>|z|)"]
                    
  )
  
  output_asking <- rbind(output_asking, out)
 
}

## add a column if this variable has a significant effect of gender
sig_gender <- subset(output_reasons, lrt_qval < 0.05)

output_asking <- output_asking %>% mutate(gender_effect = case_when(
  output_asking$predictor %in% sig_gender$response ~ "gender_effect",
  TRUE ~ "no_gender_effect"
))

# add a column with the number of people saying this factor was important
n_responses <- data.frame()
for (i in reasons){
  summary <- as.data.frame(table(survey[,i], survey$gender))
  response_yes_female <- subset(summary, Var1 == "1" & Var2 == "Female")$Freq
  response_yes_male <- subset(summary, Var1 == "1" & Var2 == "Male")$Freq
  response_yes_non_binary <- subset(summary, Var1 == "1" & Var2 == "Non-binary")$Freq
  
  predictor <- data.frame(predictor = colnames(survey)[i],
                          n_yes_female = response_yes_female,
                          n_yes_male = response_yes_male,
                          n_yes_non_binary = response_yes_non_binary)
  n_responses <- rbind(n_responses, predictor)
}

output_asking <- left_join(output_asking, n_responses, by = "predictor")

# round
output_asking <- output_asking %>% mutate_if(is.numeric, round, digits=3)

# subset significant predictors of question asking

output_asking$lrt_qval <- p.adjust(output_asking$lrt_sig,
                                   method="fdr",
                                   n=nrow(output_asking))

output_asking %>% arrange(lrt_qval) %>% kbl() %>%
  kable_classic_2()

write.csv(output_asking, file = "../results/question-asking/model_qa_conditions_motivations_gender_effect.csv",
          quote=F, row.names = F)

```

## Observational data

Next, we investigated if we observe this same pattern in the observational data on question asking behaviour. We introduced a series of potential explanatory variables in the model described in the previous section that identified the gender disparity in question asking (@sec-mainmodel). More specifically, we built five binomial GLMMs with one of the following five factors as an independent variable, 1) speaker gender, 2) gender proportion of the audience, 3) total audience size, 4) room size, or 5) host gender. These five factors therefore represent the same five conditions that were investigated above using the survey data, respectively.

Because of the result of the previous section, namely that the gender disparity in question asking arises due to women raising their hands less often (@sec-hands), we only modelled the effect of these five factors on the number of hands that were raised as a dependent variable. We again accounted for the gender proportion of the audience and the nonindependence of talks within a session. We assess significance of each factor through a likelihood ratio test.

```{r behaviour, echo=T, warning=F, message=F}

# speaker gender
data_hands$speaker_gender <- factor(data_hands$speaker_gender, levels=c("M", "F"))

m_speaker_gender <- glmer(cbind(hands_women, hands_men) ~ speaker_gender + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(speaker_gender)))

summary(m_speaker_gender)

m_speaker_gender_null <- glmer(cbind(hands_women, hands_men) ~ 1 + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(speaker_gender)))

## helper function to collect output
m_speaker_gender_out <- collect_out(model = m_speaker_gender, null = m_speaker_gender_null, name="qa_speaker_gender", n_factors=1, type="qa", save = "yes", dir = "../results/question-asking/")

m_speaker_gender_out %>% t() %>% kbl() %>%
  kable_classic_2()

# not significant

# audience gender proportion

m_audience_gender <- glmer(cbind(hands_women, hands_men) ~ audience_women_prop + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(audience_women_prop)))

summary(m_audience_gender)

m_audience_gender_null <- glmer(cbind(hands_women, hands_men) ~ 1 + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(audience_women_prop)))

## helper function to collect output
m_audience_gender_out <- collect_out(model = m_audience_gender, null = m_audience_gender_null, name="qa_audience_gender", n_factors=1, type="qa", save = "yes", dir = "../results/question-asking/")

m_audience_gender_out %>% t() %>% kbl() %>%
  kable_classic_2()

# almost significant

# host gender
data_hands$host_1_gender <- factor(data_hands$host_1_gender, levels=c("M", "F"))

m_host_gender <- glmer(cbind(hands_women, hands_men) ~ host_1_gender + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(host_1_gender)))

summary(m_host_gender)

m_host_gender_null <- glmer(cbind(hands_women, hands_men) ~ 1 + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(host_1_gender)))

## helper function to collect output
m_host_gender_out <- collect_out(model = m_host_gender, null = m_host_gender_null, name="qa_host_gender", n_factors=1, type="qa", save = "yes", dir = "../results/question-asking/")

m_host_gender_out %>% t() %>% kbl() %>%
  kable_classic_2()

# not significant 

# audience size

m_audience_size <- glmer(cbind(hands_women, hands_men) ~ audience_total + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(audience_total)))

summary(m_audience_size)

m_audience_size_null <- glmer(cbind(hands_women, hands_men) ~ 1 + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(audience_total)))

## helper function to collect output
m_audience_size_out <- collect_out(model = m_audience_size, null = m_audience_size_null, name="qa_audience_size", n_factors=1, type="qa", save = "yes", dir = "../results/question-asking/")

m_audience_size_out %>% t() %>% kbl() %>%
  kable_classic_2()

# not significant 

# room size
data_hands$room_size <- factor(data_hands$room_size, levels = c( "Large","Small", "Medium"))
                               
m_room_size <- glmer(cbind(hands_women, hands_men) ~ room_size + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(room_size)))

summary(m_room_size)

m_room_size_null <- glmer(cbind(hands_women, hands_men) ~ 1 + (1|session_id/talk_id), family = "binomial", offset=boot::logit(audience_women_prop), data = subset(data_hands, !is.na(room_size)))

## helper function to collect output
m_room_size_out <- collect_out(model = m_room_size, null = m_room_size_null, name="qa_room_size", n_factors=2, type="qa", save = "yes", dir = "../results/question-asking/")

m_room_size_out %>% t() %>% kbl() %>%
  kable_classic_2

# not significant 

```

The results based on the observational data contrast our findings from the survey. None of the five factors significantly improved the fit of the models, indicating that they do not significantly affect the probability that a woman raises her hand (LRT p-values \> 0.05). The only variable that got close to being significant was the gender proportion of the audience, with an LRT p-value of `r m_audience_gender_out$lrt_pval`, where a higher number of women in the audience was associated with less women raising their hand (estimate = `r m_audience_gender_out$est_audience_women_prop`), opposite of expectations.

Therefore, although self-reports indicate that women feel more comfortable asking questions in certain situations, observational data collected at the congress indicate that in practice, these conditions are in fact not associated with the probability that a woman asks a question.
