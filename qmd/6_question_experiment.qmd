---
title: "Question asking experiment"
author: "Bernice Sepers"
format: html
editor: visual
bibliography: references.bib
---

```{r setup, echo=F, message=F}

# load packages
pacman::p_load(lme4, tidyverse, data.table, performance, DHARMa, jtools, readxl, kableExtra)

### Load data ####

#behavioural
load("../data/question_asking/question_asking_data_condensed_for_analysis.RData")

### Set theme ####
source("../scripts/EDI_ggplot_theme.R")

### Load function to output model results
source("../scripts/function_collect_model_output.R")

```

```{r setup bernice, echo=F, message=F, warning=F}

# convert to factor
data_analysis$condition<-as.factor(data_analysis$condition)
data_analysis$session_id<-as.factor(data_analysis$session_id)
data_analysis$talk_id<-as.factor(data_analysis$talk_id)

data_clean <- subset(data_analysis,  is.na(followup) & is.na(jumper)& is.na(host_asks) & !grepl("speaker|questioner", allocator_question))

#extra filtering
data_clean <- subset(data_clean, !is.na(questioner_gender) & !is.na(audience_women_prop))

rm(data_analysis)

## select manipulated data
data_analysis_tr <- subset(data_clean, treatment != "Control" & treatment_success == "Successful")

#simplify column for the gender of the first questioner in the talk
data_analysis_tr$condition <- gsub(data_analysis_tr$condition, pattern = "First question to a woman", replacement = "F")

data_analysis_tr$condition <- gsub(data_analysis_tr$condition, pattern = "First question to a man", replacement = "M")

#exclude first question
data_analysis_tr <- subset(data_analysis_tr, data_analysis_tr$question_nr != 1)

### unmanipulated data
data_analysis_c <- subset(data_clean, data_clean$treatment == "Control")

#create "condition" column by creating separate dataframe for first questions (firstq_c)
# and creating "condition" column in data_analysis_c using the information in firstq_c
firstq_c <- subset(data_analysis_c, question_nr == 1)

colnames(firstq_c)[colnames(firstq_c) == "gender_questioner_female"] ="FIRST_gender_questioner_female"

colnames(firstq_c)[colnames(firstq_c) == "questioner_gender"] ="FIRST_questioner_gender"

data_analysis_c$FIRST_gender_questioner_female <- firstq_c$FIRST_gender_questioner_female[match(data_analysis_c$talk_id, firstq_c$talk_id)]

data_analysis_c$FIRST_questioner_gender <- firstq_c$FIRST_questioner_gender[match(data_analysis_c$talk_id, firstq_c$talk_id)]

rm(firstq_c)

#exclude first question
data_analysis_c <- subset(data_analysis_c, data_analysis_c$question_nr != 1)
nrow(data_analysis_c) #230

#exclude NAs
data_analysis_c <- subset(data_analysis_c, !is.na(data_analysis_c$FIRST_questioner_gender))
   
```

We conducted an experiment in which we instructed session hosts assigned to manipulated sessions to either direct the first question of the Q&A to a woman or to a man. Here, we test whether this condition (first question asked by a man vs a woman) significantly affects the probability that women asks questions in the rest of the Q&A, the probability of a woman raising their hand, and/or the probability of a woman getting chosen to ask their question. Our hypothesis is that if women engagement is encouraged by female participation, women ask more questions in the condition where women started the Q&A.

To address this question, we build binomial GLMMs with condition as a fixed effect. The model structure is similar to the question-asking models used in section XXXX.

## Manipulated data

First, we focus on manipulated sessions only, where we exclude situations where the host could not make a choice or if the gender proportion in the audience or the gender of the questioner was unknown (or disagreed upon between observers).

We assess the significance of the condition using an LRT as well as a Wald test.

```{r models man, echo=T, warning=F, message=F}

### Asking questions

man_ask_null <- glmer(gender_questioner_female ~ (1|session_id/talk_id), data = data_analysis_tr, family = binomial, offset = boot::logit(audience_women_prop))

man_ask <- glmer(gender_questioner_female ~ -1 + condition + (1|session_id/talk_id), data = data_analysis_tr, family = binomial, offset = boot::logit(audience_women_prop))

# LRT
drop1(test="Chisq",man_ask) 

summary(man_ask)

m_qa_man_ask <- collect_out(model = man_ask, null = man_ask_null,  name = "QA_mani_asking", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_man_ask %>% t() %>% kbl() %>%
  kable_classic_2()

### Raising hands

# remove when no hands when were raised, only men or only women
data_analysis_tr_hands <- subset(data_analysis_tr, hands_total > 0 & !is.na(hands_women) & !is.na(hands_men) & 
  !is.na(hands_total))

man_hands_null <- glmer(cbind(hands_women, hands_men) ~  (1|session_id/talk_id), data = data_analysis_tr_hands, family = binomial, offset = boot::logit(audience_women_prop))

man_hands <- glmer(cbind(hands_women, hands_men) ~ -1 + condition + (1|session_id/talk_id), data = data_analysis_tr_hands, family = binomial, offset = boot::logit(audience_women_prop))

summary(man_hands)

m_qa_man_hands <- collect_out(model = man_hands, null = man_hands_null,  name = "QA_mani_hands", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_man_hands %>% t() %>% kbl() %>%
  kable_classic_2()

## Getting chosen

# exclude cases where the host could not choose
data_analysis_tr_chosen <- subset(data_analysis_tr, hands_prop_women > 0 & hands_prop_women < 1) 

nrow(data_analysis_tr_chosen) #49

man_chosen_null <- glmer(gender_questioner_female ~ (1|session_id/talk_id), data_analysis_tr_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

man_chosen <- glmer(gender_questioner_female ~ -1 + condition + (1|session_id/talk_id), data_analysis_tr_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

summary(man_chosen)

m_qa_man_chosen <- collect_out(model = man_chosen, null = man_chosen_null,  name = "QA_mani_chosen", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_man_chosen %>% t() %>% kbl() %>%
  kable_classic_2()
```

### Manipulated data only second question

Additionally, we address the same three questions as above but only focus on the probability that a woman asks *the second* question as opposed to the entire rest of the Q&A.

```{r manipulated Q2, echo=T, message=F, warning=F}

# select only the second question

data_analysis_tr2 <- subset(data_analysis_tr, question_nr == 2)

data_analysis_tr2_hands <- subset(data_analysis_tr_hands, question_nr == 2)

data_analysis_tr2_chosen <- subset(data_analysis_tr_chosen, question_nr == 2)

### Asking questions
man_ask_q2_null <- glmer(gender_questioner_female ~ -1  + (1|session_id/talk_id), data = data_analysis_tr2, family = binomial, offset = boot::logit(audience_women_prop))

man_ask_q2 <- glmer(gender_questioner_female ~ -1 + condition + (1|session_id/talk_id), data = data_analysis_tr2, family = binomial, offset = boot::logit(audience_women_prop))

summary(man_ask_q2) 

m_qa_man_ask_q2 <- collect_out(model = man_ask_q2, null = man_ask_q2_null,  name = "QA_mani_asking_Q2", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_man_ask_q2 %>% t() %>% kbl() %>%
  kable_classic_2() #same conclusion as above

## Raising hands

man_hands_q2_null <- glmer(cbind(hands_women, hands_men) ~ (1|session_id/talk_id), data = data_analysis_tr2_hands, family = binomial, offset = boot::logit(audience_women_prop))

man_hands_q2 <- glmer(cbind(hands_women, hands_men) ~ -1 + condition + (1|session_id/talk_id), data = data_analysis_tr2_hands, family = binomial, offset = boot::logit(audience_women_prop))

summary(man_hands_q2) 

m_qa_man_hands_q2 <- collect_out(model = man_hands_q2, null = man_hands_q2_null,  name = "QA_mani_hands_Q2", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_man_hands_q2 %>% t() %>% kbl() %>%
  kable_classic_2() #same conclusion as above

## Raising hands

nrow(data_analysis_tr2_chosen) #20

man_chosen_q2_null <- glmer(gender_questioner_female ~ (1|session_id/talk_id), data_analysis_tr2_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

man_chosen_q2 <- glmer(gender_questioner_female ~ -1 + condition + (1|session_id/talk_id), data_analysis_tr2_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

summary(man_chosen_q2)

m_qa_man_chosen_q2 <- collect_out(model = man_chosen_q2, null = man_chosen_q2_null,  name = "QA_mani_chosen_Q2", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_man_chosen_q2 %>% t() %>% kbl() %>%
  kable_classic_2()

```

## Unmanipulated data

We ask the same question but using the unmanipulated data only, where session hosts were not given any instructions.

```{r models unman, echo=T, warning=F, message=F}

### Asking questions

unman_ask_null <- glmer(gender_questioner_female ~ (1|session_id/talk_id), data = data_analysis_c, family = binomial, offset = boot::logit(audience_women_prop))

unman_ask <- glmer(gender_questioner_female ~ -1 + FIRST_questioner_gender + (1|session_id/talk_id), data = data_analysis_c, family = binomial, offset = boot::logit(audience_women_prop))

# LRT
drop1(test="Chisq",unman_ask) 

summary(unman_ask)

m_qa_unman_ask <- collect_out(model = unman_ask, null = unman_ask_null,  name = "QA_unmani_asking", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_unman_ask %>% t() %>% kbl() %>%
  kable_classic_2()

### Raising hands

# remove when no hands when were raised, only men or only women
data_analysis_c_hands <- subset(data_analysis_c, hands_total > 0 & !is.na(hands_women) & !is.na(hands_men) & 
  !is.na(hands_total))

unman_hands_null <- glmer(cbind(hands_women, hands_men) ~  (1|session_id/talk_id), data = data_analysis_c_hands, family = binomial, offset = boot::logit(audience_women_prop))

unman_hands <- glmer(cbind(hands_women, hands_men) ~ -1 + FIRST_questioner_gender + (1|session_id/talk_id), data = data_analysis_c_hands, family = binomial, offset = boot::logit(audience_women_prop))

summary(unman_hands)

m_qa_unman_hands <- collect_out(model = unman_hands, null = unman_hands_null,  name = "QA_unmani_hands", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_unman_hands %>% t() %>% kbl() %>%
  kable_classic_2()

## Getting chosen

# exclude cases where the host could not choose
data_analysis_c_chosen <- subset(data_analysis_c, hands_prop_women > 0 & hands_prop_women < 1) 

nrow(data_analysis_c_chosen) #51

unman_chosen_null <- glmer(gender_questioner_female ~ (1|session_id/talk_id), data_analysis_c_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

unman_chosen <- glmer(gender_questioner_female ~ -1 + FIRST_questioner_gender + (1|session_id/talk_id), data_analysis_c_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

summary(unman_chosen)

m_qa_unman_chosen <- collect_out(model = unman_chosen, null = unman_chosen_null,  name = "QA_unmani_chosen", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_unman_chosen %>% t() %>% kbl() %>%
  kable_classic_2()
```

### Unmanipulated data only second question

Additionally, we address the same three questions as above but only focus on the probability that a woman asks *the second* question as opposed to the entire rest of the Q&A.

```{r unmanipulated Q2, echo=T, message=F, warning=F}

# select only the second question

data_analysis_c2 <- subset(data_analysis_c, question_nr == 2)

data_analysis_c2_hands <- subset(data_analysis_c_hands, question_nr == 2)

data_analysis_c2_chosen <- subset(data_analysis_c_chosen, question_nr == 2)

### Asking questions
unman_ask_q2_null <- glmer(gender_questioner_female ~ -1  + (1|session_id/talk_id), data = data_analysis_c2, family = binomial, offset = boot::logit(audience_women_prop))

unman_ask_q2 <- glmer(gender_questioner_female ~ -1 + FIRST_questioner_gender + (1|session_id/talk_id), data = data_analysis_c2, family = binomial, offset = boot::logit(audience_women_prop))

summary(unman_ask_q2) 

m_qa_unman_ask_q2 <- collect_out(model = unman_ask_q2, null = unman_ask_q2_null,  name = "QA_unmani_asking_Q2", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_unman_ask_q2 %>% t() %>% kbl() %>%
  kable_classic_2() #same conclusion as above

## Raising hands

unman_hands_q2_null <- glmer(cbind(hands_women, hands_men) ~ (1|session_id/talk_id), data = data_analysis_c2_hands, family = binomial, offset = boot::logit(audience_women_prop))

unman_hands_q2 <- glmer(cbind(hands_women, hands_men) ~ -1 + FIRST_questioner_gender + (1|session_id/talk_id), data = data_analysis_c2_hands, family = binomial, offset = boot::logit(audience_women_prop))

summary(unman_hands_q2) 

m_qa_unman_hands_q2 <- collect_out(model = unman_hands_q2, null = unman_hands_q2_null,  name = "QA_unmani_hands_Q2", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_unman_hands_q2 %>% t() %>% kbl() %>%
  kable_classic_2() #same conclusion as above

## Raising hands

nrow(data_analysis_c2_chosen) #26

unman_chosen_q2_null <- glmer(gender_questioner_female ~ (1|session_id/talk_id), data_analysis_c2_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

unman_chosen_q2 <- glmer(gender_questioner_female ~ -1 + FIRST_questioner_gender + (1|session_id/talk_id), data_analysis_c2_chosen, family = "binomial", offset = boot::logit(hands_prop_women))

summary(unman_chosen)

m_qa_unman_chosen_q2 <- collect_out(model = unman_chosen_q2, null = unman_chosen_q2_null,  name = "QA_unmani_chosen_Q2", n_factors = 2, type = "exp", save="yes", dir="../results/question-asking/")

m_qa_unman_chosen_q2 %>% t() %>% kbl() %>%
  kable_classic_2()

```

## Plots

Let's try to play around with ways of showing the raw data of the effect of the gender of the first questioner on the probability that a woman asks a question in the rest of the session.

```{r plots, echo=T, message=F, warning=F}

prop_plot <- data.frame(what = rep(c("Asking questions", "Raising hands", "Getting chosen"), times=4),
                        data = rep(c("Manipulated", "Unmanipulated"), each = 6),
                        gender_first = rep(c(rep(c("Woman"), times=3), rep(c("Man"), times=3)), times=2),
                        est = c(m_qa_man_ask$est_conditionF,
                                     m_qa_man_hands$est_conditionF,
                                     m_qa_man_chosen$est_conditionF,
                                     m_qa_man_ask$est_conditionM,
                                     m_qa_man_hands$est_conditionM,
                                     m_qa_man_chosen$est_conditionM,
                                     m_qa_unman_ask$est_FIRST_questioner_genderF,
                                     m_qa_unman_hands$est_FIRST_questioner_genderF,
                                     m_qa_unman_chosen$est_FIRST_questioner_genderF,
                                     m_qa_unman_ask$est_FIRST_questioner_genderM,
                                     m_qa_unman_hands$est_FIRST_questioner_genderM,
                                     m_qa_unman_chosen$est_FIRST_questioner_genderM),
                        lower = c(m_qa_man_ask$lowerCI_conditionF,
                                     m_qa_man_hands$lowerCI_conditionF,
                                     m_qa_man_chosen$lowerCI_conditionF,
                                     m_qa_man_ask$lowerCI_conditionM,
                                     m_qa_man_hands$lowerCI_conditionM,
                                     m_qa_man_chosen$lowerCI_conditionM,
                                m_qa_unman_ask$lowerCI_FIRST_questioner_genderF,
                                     m_qa_unman_hands$lowerCI_FIRST_questioner_genderF,
                                     m_qa_unman_chosen$lowerCI_FIRST_questioner_genderF,
                                     m_qa_unman_ask$lowerCI_FIRST_questioner_genderM,
                                     m_qa_unman_hands$lowerCI_FIRST_questioner_genderM,
                                     m_qa_unman_chosen$lowerCI_FIRST_questioner_genderM),
                        higher = c(m_qa_man_ask$higherCI_conditionF,
                                     m_qa_man_hands$higherCI_conditionF,
                                     m_qa_man_chosen$higherCI_conditionF,
                                     m_qa_man_ask$higherCI_conditionM,
                                     m_qa_man_hands$higherCI_conditionM,
                                     m_qa_man_chosen$higherCI_conditionM,
                                     m_qa_unman_ask$higherCI_FIRST_questioner_genderF,
                                     m_qa_unman_hands$higherCI_FIRST_questioner_genderF,
                                     m_qa_unman_chosen$higherCI_FIRST_questioner_genderF,
                                     m_qa_unman_ask$higherCI_FIRST_questioner_genderM,
                                     m_qa_unman_hands$higherCI_FIRST_questioner_genderM,
                                     m_qa_unman_chosen$higherCI_FIRST_questioner_genderM),
                         pval = c(m_qa_man_ask$pval_conditionF,
                                     m_qa_man_hands$pval_conditionF,
                                     m_qa_man_chosen$pval_conditionF,
                                     m_qa_man_ask$pval_conditionM,
                                     m_qa_man_hands$pval_conditionM,
                                     m_qa_man_chosen$pval_conditionM,
                                     m_qa_unman_ask$pval_FIRST_questioner_genderF,
                                     m_qa_unman_hands$pval_FIRST_questioner_genderF,
                                     m_qa_unman_chosen$pval_FIRST_questioner_genderF,
                                     m_qa_unman_ask$pval_FIRST_questioner_genderM,
                                     m_qa_unman_hands$pval_FIRST_questioner_genderM,
                                     m_qa_unman_chosen$pval_FIRST_questioner_genderM))


col_sig <- clrs[c(10,2)] %>%
  color() %>% 
  set_names(nm = c("sig", "nonsig"))

prop_plot <- prop_plot %>% mutate(est_prob = plogis(est),
                                  lower_prob = plogis(lower),
                                  higher_prob = plogis(higher),
                                  sig = case_when(pval < 0.05 ~ "sig", pval >= 0.05 ~ "nonsig"))


prop_plot$what <- factor(prop_plot$what, levels = c("Asking questions", "Raising hands", "Getting chosen"))
prop_plot$data <- factor(prop_plot$data, levels = c("Unmanipulated", "Manipulated"))

ggplot(prop_plot) +
  geom_point(aes(y = est_prob, x = gender_first, col = sig), size = 6) + 
  geom_segment(aes(y = lower_prob, yend = higher_prob, x = gender_first),
               linewidth=1) +
  geom_hline(yintercept = 0.5, col = "red", linetype = "dotted") +
  
  labs(y = "Female probability and 95% CI", x = "Gender first questioner") + 
  facet_grid(data~what, scales="free_x")+
  scale_color_manual(values = col_sig) +
  theme(legend.position = "none",
        strip.text = element_text(size = 16),
        panel.border = element_rect(color = "black", fill = NA, size = 1)) -> plot_exp

plot_exp

ggsave(plot_exp, file = "../plots/main/fig4_qa_exp.png", width=10, height=8)

```
